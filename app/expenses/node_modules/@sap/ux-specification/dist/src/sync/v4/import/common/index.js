"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const decorators_1 = require("../../../common/decoration/decorators");
const utils_1 = require("../../../common/utils");
/**
 * Transfers settings from manifest to object page config
 * @param configPart - part of the configuration to be filled
 * @param manifest - manifest.json of the app
 * @param jsonSchema - app specific schema
 * @param pageID - ID of the given object page
 * @param sectionId (optional) - ID of the given section (optional)
 */
function transferSettingsOfObject(configPart, manifest, jsonSchema, pageName, breadcrumbs, sectionId) {
    if (!jsonSchema) {
        return;
    }
    let manifestSection = {};
    const targetAnnotationEncoded = sectionId && sectionId.replace('/', '::');
    for (const propertyKey in jsonSchema['properties']) {
        const syncRule = decorators_1.getReflectMetadata(configPart, propertyKey);
        if (syncRule && syncRule.manifest) {
            const path = syncRule.manifest.path([pageName], manifest, targetAnnotationEncoded, breadcrumbs[0]);
            manifestSection = utils_1.getManifestSectionByPathV4(manifest, path, sectionId, targetAnnotationEncoded);
            const importHandler = syncRule.manifest.import;
            if (importHandler && typeof importHandler === 'function') {
                const value = importHandler(manifestSection, sectionId);
                if (value !== undefined) {
                    configPart[propertyKey] = value;
                }
            }
            else {
                const manifestKey = syncRule.manifest.key || propertyKey;
                if (manifestKey in manifestSection) {
                    configPart[propertyKey] = manifestSection[manifestKey];
                }
            }
        }
    }
}
exports.transferSettingsOfObject = transferSettingsOfObject;
//# sourceMappingURL=index.js.map