"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.oDataHandler = void 0;
var router_1 = __importDefault(require("router"));
var batch_1 = require("./batch");
var odataV2Request_1 = require("./request/odataV2Request");
var metadata_1 = require("./data/metadata");
var dataAccess_1 = require("./data/dataAccess");
var odataV4Request_1 = require("./request/odataV4Request");
var fileLoader_1 = require("./utils/fileLoader");
var stringToCds_1 = require("./utils/stringToCds");
function oDataHandler(config) {
    return __awaiter(this, void 0, void 0, function () {
        var router, edmx, cdsContent, metadata, dataAccess;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    router = router_1.default();
                    if (!config.service.metadataCdsPath) return [3 /*break*/, 2];
                    return [4 /*yield*/, fileLoader_1.loadFile(config.service.metadataCdsPath)];
                case 1:
                    cdsContent = _a.sent();
                    edmx = stringToCds_1.compileCDS(cdsContent, config.service.cdsServiceName);
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, fileLoader_1.loadFile(config.service.metadataXmlPath)];
                case 3:
                    edmx = _a.sent();
                    _a.label = 4;
                case 4: return [4 /*yield*/, metadata_1.ODataMetadata.parse(edmx)];
                case 5:
                    metadata = _a.sent();
                    dataAccess = new dataAccess_1.DataAccess(config.service.mockdataRootPath, metadata, !!config.strictKeyMode, !!config.contextBasedIsolation, !!config.service.generateMockData);
                    router.get('/\\$metadata', function (req, res) {
                        res.contentType('application/xml').send(edmx);
                    });
                    router.use('/\\$batch', batch_1.batchRequestHandler(metadata, dataAccess, config));
                    router.get('/', function (req, res) {
                        var data = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <app:service xml:lang=\"en\" xml:base=\"" + config.service.urlBasePath + "/" + config.service.name + "/\" \n            xmlns:app=\"http://www.w3.org/2007/app\" \n            xmlns:atom=\"http://www.w3.org/2005/Atom\" \n            xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" \n            xmlns:sap=\"http://www.sap.com/Protocols/SAPData\">\n            <app:workspace>\n            </app:workspace>\n            <atom:link rel=\"self\" href=\"" + config.service.urlBasePath + "/" + config.service.name + "/\"/>\n            <atom:link rel=\"latest-version\" href=\"" + config.service.urlBasePath + "/" + config.service.name + "/\"/>\n        </app:service>";
                        res.contentType('application/xml').send(data);
                    });
                    router.get('/*', function (req, res) { return __awaiter(_this, void 0, void 0, function () {
                        var odataReq, data, response, e_1, errorResponse;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    odataReq = metadata.getVersion() === '2.0'
                                        ? new odataV2Request_1.ODataV2Request(req.baseUrl, req.url.substring(1), metadata)
                                        : new odataV4Request_1.ODataV4Request(req.baseUrl, req.url.substring(1), metadata);
                                    res.setHeader('sap-tenantId', odataReq.tenantId);
                                    res.type('application/json');
                                    _a.label = 1;
                                case 1:
                                    _a.trys.push([1, 3, , 4]);
                                    return [4 /*yield*/, dataAccess.getData(odataReq)];
                                case 2:
                                    data = _a.sent();
                                    response = odataReq.createResponse(data);
                                    response.writeToResponse(res);
                                    return [3 /*break*/, 4];
                                case 3:
                                    e_1 = _a.sent();
                                    errorResponse = odataReq.createErrorResponse(e_1);
                                    errorResponse.writeToResponse(res);
                                    return [3 /*break*/, 4];
                                case 4: return [2 /*return*/];
                            }
                        });
                    }); });
                    router.head('/*', function (req, res) {
                        var tenantId = req.originalUrl.indexOf('/tenant-') === 0 ? req.originalUrl.split('/')[1] : 'tenant-default';
                        res.setHeader('sap-tenantId', tenantId);
                        var contextId = req.header('sap-contextid');
                        if (contextId) {
                            dataAccess.resetStickySessionTimeout(res, tenantId);
                        }
                    });
                    return [2 /*return*/, router];
            }
        });
    });
}
exports.oDataHandler = oDataHandler;
//# sourceMappingURL=data:application/json;base64,