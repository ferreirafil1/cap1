"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODataV2Request = void 0;
var odataRequest_1 = require("./odataRequest");
var ODataV2Request = /** @class */ (function (_super) {
    __extends(ODataV2Request, _super);
    function ODataV2Request() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ODataV2Request.prototype.parseExpand = function (expandParameters) {
        var props = expandParameters.split(',');
        return props.reduce(function (reducer, property) {
            reducer.expand[property] = true;
            return reducer;
        }, { expand: {} });
    };
    // protected enrichElement(entity: string, element: object): void {
    //     const keyValues: string[] = [];
    //     const keys = this.metadata.getKeys(entity);
    //     keys.forEach((key) => {
    //         keyValues.push(`${key}='${element[key]}'`);
    //     });
    //     const uri = `${this.baseUrl}/${entity}(${keyValues.join(',')})`;
    //     element['__metadata'] = {
    //         id: uri,
    //         uri: uri,
    //         type: this.metadata.getEntitySet(this.query.entitySet).EntityType
    //     };
    // }
    ODataV2Request.prototype.createResponse = function (data, bCreated) {
        if (bCreated === void 0) { bCreated = false; }
        var response = _super.prototype.createResponse.call(this, data);
        response.setHeader('Content-Type', 'application/json');
        response.setHeader('dataserviceversion', '2.0');
        response.setHeader('sap-metadata-last-modified', 'Tue, 01 Oct 2019 15:02:44 GMT');
        response.setHeader('cache-control', 'no-store, no-cache');
        if (data && data.__metadata && data.__metadata.id) {
            response.setHeader('location', data.__metadata.id);
        }
        return response;
    };
    ODataV2Request.prototype.toJSON = function (data) {
        if (data.length !== undefined) {
            return JSON.stringify({
                d: {
                    __count: data.length + '',
                    results: data
                }
            });
        }
        else {
            return JSON.stringify({ d: data || {} });
        }
    };
    return ODataV2Request;
}(odataRequest_1.ODataRequest));
exports.ODataV2Request = ODataV2Request;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2RhdGFWMlJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVyL3JlcXVlc3Qvb2RhdGFWMlJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtDQUF5RDtBQUd6RDtJQUFvQyxrQ0FBWTtJQUFoRDs7SUFtREEsQ0FBQztJQWxEYSxvQ0FBVyxHQUFyQixVQUFzQixnQkFBZ0I7UUFDbEMsSUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFDLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FDZixVQUFDLE9BQU8sRUFBRSxRQUFRO1lBQ2QsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTyxPQUFPLENBQUM7UUFDbkIsQ0FBQyxFQUNELEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUNqQixDQUFDO0lBQ04sQ0FBQztJQUVELG1FQUFtRTtJQUNuRSxzQ0FBc0M7SUFDdEMsa0RBQWtEO0lBQ2xELDhCQUE4QjtJQUM5QixzREFBc0Q7SUFDdEQsVUFBVTtJQUNWLHVFQUF1RTtJQUN2RSxnQ0FBZ0M7SUFDaEMsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQiw0RUFBNEU7SUFDNUUsU0FBUztJQUNULElBQUk7SUFFRyx1Q0FBYyxHQUFyQixVQUFzQixJQUFTLEVBQUUsUUFBZ0I7UUFBaEIseUJBQUEsRUFBQSxnQkFBZ0I7UUFDN0MsSUFBTSxRQUFRLEdBQUcsaUJBQU0sY0FBYyxZQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVDLFFBQVEsQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDdkQsUUFBUSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNoRCxRQUFRLENBQUMsU0FBUyxDQUFDLDRCQUE0QixFQUFFLCtCQUErQixDQUFDLENBQUM7UUFDbEYsUUFBUSxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUMxRCxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFO1lBQy9DLFFBQVEsQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdEQ7UUFFRCxPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDO0lBRVMsK0JBQU0sR0FBaEIsVUFBaUIsSUFBdUI7UUFDcEMsSUFBSyxJQUFpQixDQUFDLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDekMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNsQixDQUFDLEVBQUU7b0JBQ0MsT0FBTyxFQUFHLElBQWlCLENBQUMsTUFBTSxHQUFHLEVBQUU7b0JBQ3ZDLE9BQU8sRUFBRSxJQUFJO2lCQUNoQjthQUNKLENBQUMsQ0FBQztTQUNOO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDNUM7SUFDTCxDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQUFDLEFBbkRELENBQW9DLDJCQUFZLEdBbUQvQztBQW5EWSx3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9EYXRhUmVxdWVzdCwgRGF0YVF1ZXJ5IH0gZnJvbSAnLi9vZGF0YVJlcXVlc3QnO1xuaW1wb3J0IHsgU2ltcGxlUmVzcG9uc2UgfSBmcm9tICcuLi9iYXRjaC9odHRwL3NpbXBsZUh0dHBSZXNwb25zZSc7XG5cbmV4cG9ydCBjbGFzcyBPRGF0YVYyUmVxdWVzdCBleHRlbmRzIE9EYXRhUmVxdWVzdCB7XG4gICAgcHJvdGVjdGVkIHBhcnNlRXhwYW5kKGV4cGFuZFBhcmFtZXRlcnMpOiBQYXJ0aWFsPERhdGFRdWVyeT4ge1xuICAgICAgICBjb25zdCBwcm9wcyA9IGV4cGFuZFBhcmFtZXRlcnMuc3BsaXQoJywnKTtcbiAgICAgICAgcmV0dXJuIHByb3BzLnJlZHVjZShcbiAgICAgICAgICAgIChyZWR1Y2VyLCBwcm9wZXJ0eSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlZHVjZXIuZXhwYW5kW3Byb3BlcnR5XSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlZHVjZXI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBleHBhbmQ6IHt9IH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBwcm90ZWN0ZWQgZW5yaWNoRWxlbWVudChlbnRpdHk6IHN0cmluZywgZWxlbWVudDogb2JqZWN0KTogdm9pZCB7XG4gICAgLy8gICAgIGNvbnN0IGtleVZhbHVlczogc3RyaW5nW10gPSBbXTtcbiAgICAvLyAgICAgY29uc3Qga2V5cyA9IHRoaXMubWV0YWRhdGEuZ2V0S2V5cyhlbnRpdHkpO1xuICAgIC8vICAgICBrZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgIC8vICAgICAgICAga2V5VmFsdWVzLnB1c2goYCR7a2V5fT0nJHtlbGVtZW50W2tleV19J2ApO1xuICAgIC8vICAgICB9KTtcbiAgICAvLyAgICAgY29uc3QgdXJpID0gYCR7dGhpcy5iYXNlVXJsfS8ke2VudGl0eX0oJHtrZXlWYWx1ZXMuam9pbignLCcpfSlgO1xuICAgIC8vICAgICBlbGVtZW50WydfX21ldGFkYXRhJ10gPSB7XG4gICAgLy8gICAgICAgICBpZDogdXJpLFxuICAgIC8vICAgICAgICAgdXJpOiB1cmksXG4gICAgLy8gICAgICAgICB0eXBlOiB0aGlzLm1ldGFkYXRhLmdldEVudGl0eVNldCh0aGlzLnF1ZXJ5LmVudGl0eVNldCkuRW50aXR5VHlwZVxuICAgIC8vICAgICB9O1xuICAgIC8vIH1cblxuICAgIHB1YmxpYyBjcmVhdGVSZXNwb25zZShkYXRhOiBhbnksIGJDcmVhdGVkID0gZmFsc2UpOiBTaW1wbGVSZXNwb25zZSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gc3VwZXIuY3JlYXRlUmVzcG9uc2UoZGF0YSk7XG4gICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCdkYXRhc2VydmljZXZlcnNpb24nLCAnMi4wJyk7XG4gICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcignc2FwLW1ldGFkYXRhLWxhc3QtbW9kaWZpZWQnLCAnVHVlLCAwMSBPY3QgMjAxOSAxNTowMjo0NCBHTVQnKTtcbiAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCdjYWNoZS1jb250cm9sJywgJ25vLXN0b3JlLCBuby1jYWNoZScpO1xuICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLl9fbWV0YWRhdGEgJiYgZGF0YS5fX21ldGFkYXRhLmlkKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZXRIZWFkZXIoJ2xvY2F0aW9uJywgZGF0YS5fX21ldGFkYXRhLmlkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgdG9KU09OKGRhdGE6IG9iamVjdCB8IG9iamVjdFtdKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKChkYXRhIGFzIG9iamVjdFtdKS5sZW5ndGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBkOiB7XG4gICAgICAgICAgICAgICAgICAgIF9fY291bnQ6IChkYXRhIGFzIG9iamVjdFtdKS5sZW5ndGggKyAnJyxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0czogZGF0YVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHsgZDogZGF0YSB8fCB7fSB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==