"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Batch = void 0;
var keyGenerator_1 = require("../keyGenerator");
var Batch = /** @class */ (function () {
    function Batch(type) {
        this.type = type;
        this.isChangeSet = type === 'changeset';
        if (this.isChangeSet) {
            this.changeSetErrorResponse = null;
        }
        this.parts = [];
    }
    Batch.prototype.write = function (context, response) {
        if (this.changeSetErrorResponse) {
            //if an error in the changeset occured then only the response of this error is returned
            response.statusCode = 200; //TODO check responce
            response.write('Content-Type: application/http\r\n');
            response.write('Content-Transfer-Encoding: binary\r\n');
            response.write('\r\n'); //end of header
            this.changeSetErrorResponse.writeToBatchResponse(response);
        }
        else {
            response.statusCode = 200;
            var boundary = 'batch_' + keyGenerator_1.createBoundary(context);
            if (this.isChangeSet) {
                response.write('Content-Type: multipart/mixed; boundary=' + boundary + '\r\n');
                response.write('\r\n'); //end of header
            }
            else {
                response.setHeader('Content-Type', 'multipart/mixed; boundary=' + boundary);
            }
            response.write('--' + boundary + '\r\n');
            for (var i = 0; i < this.parts.length; i++) {
                if (i !== 0) {
                    response.write('\r\n--' + boundary + '\r\n');
                }
                this.parts[i].write(context, response);
            }
            response.write('\r\n--' + boundary + '--\r\n');
        }
    };
    return Batch;
}());
exports.Batch = Batch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVyL2JhdGNoL2NvbnRlbnQvYmF0Y2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0RBQWlEO0FBRWpEO0lBTUksZUFBbUIsSUFBSTtRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksS0FBSyxXQUFXLENBQUM7UUFDeEMsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUM7U0FDdEM7UUFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRU0scUJBQUssR0FBWixVQUFhLE9BQU8sRUFBRSxRQUFRO1FBQzFCLElBQUksSUFBSSxDQUFDLHNCQUFzQixFQUFFO1lBQzdCLHVGQUF1RjtZQUN2RixRQUFRLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxDQUFDLHFCQUFxQjtZQUNoRCxRQUFRLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7WUFDckQsUUFBUSxDQUFDLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO1lBQ3hELFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFlO1lBRXZDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUM5RDthQUFNO1lBQ0gsUUFBUSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7WUFDMUIsSUFBTSxRQUFRLEdBQUcsUUFBUSxHQUFHLDZCQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDcEQsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNsQixRQUFRLENBQUMsS0FBSyxDQUFDLDBDQUEwQyxHQUFHLFFBQVEsR0FBRyxNQUFNLENBQUMsQ0FBQztnQkFDL0UsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLGVBQWU7YUFDMUM7aUJBQU07Z0JBQ0gsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsNEJBQTRCLEdBQUcsUUFBUSxDQUFDLENBQUM7YUFDL0U7WUFFRCxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxRQUFRLEdBQUcsTUFBTSxDQUFDLENBQUM7WUFDekMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQ1QsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDO2lCQUNoRDtnQkFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDMUM7WUFDRCxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxRQUFRLEdBQUcsUUFBUSxDQUFDLENBQUM7U0FDbEQ7SUFDTCxDQUFDO0lBQ0wsWUFBQztBQUFELENBQUMsQUE1Q0QsSUE0Q0M7QUE1Q1ksc0JBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCb3VuZGFyeSB9IGZyb20gJy4uL2tleUdlbmVyYXRvcic7XG5cbmV4cG9ydCBjbGFzcyBCYXRjaCB7XG4gICAgdHlwZTogYW55O1xuICAgIGlzQ2hhbmdlU2V0OiBib29sZWFuO1xuICAgIGNoYW5nZVNldEVycm9yUmVzcG9uc2U6IGFueTtcbiAgICBwYXJ0czogYW55O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHR5cGUpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5pc0NoYW5nZVNldCA9IHR5cGUgPT09ICdjaGFuZ2VzZXQnO1xuICAgICAgICBpZiAodGhpcy5pc0NoYW5nZVNldCkge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTZXRFcnJvclJlc3BvbnNlID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcnRzID0gW107XG4gICAgfVxuXG4gICAgcHVibGljIHdyaXRlKGNvbnRleHQsIHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICh0aGlzLmNoYW5nZVNldEVycm9yUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIC8vaWYgYW4gZXJyb3IgaW4gdGhlIGNoYW5nZXNldCBvY2N1cmVkIHRoZW4gb25seSB0aGUgcmVzcG9uc2Ugb2YgdGhpcyBlcnJvciBpcyByZXR1cm5lZFxuICAgICAgICAgICAgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9IDIwMDsgLy9UT0RPIGNoZWNrIHJlc3BvbmNlXG4gICAgICAgICAgICByZXNwb25zZS53cml0ZSgnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9odHRwXFxyXFxuJyk7XG4gICAgICAgICAgICByZXNwb25zZS53cml0ZSgnQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogYmluYXJ5XFxyXFxuJyk7XG4gICAgICAgICAgICByZXNwb25zZS53cml0ZSgnXFxyXFxuJyk7IC8vZW5kIG9mIGhlYWRlclxuXG4gICAgICAgICAgICB0aGlzLmNoYW5nZVNldEVycm9yUmVzcG9uc2Uud3JpdGVUb0JhdGNoUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9IDIwMDtcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kYXJ5ID0gJ2JhdGNoXycgKyBjcmVhdGVCb3VuZGFyeShjb250ZXh0KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQ2hhbmdlU2V0KSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uud3JpdGUoJ0NvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L21peGVkOyBib3VuZGFyeT0nICsgYm91bmRhcnkgKyAnXFxyXFxuJyk7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uud3JpdGUoJ1xcclxcbicpOyAvL2VuZCBvZiBoZWFkZXJcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAnbXVsdGlwYXJ0L21peGVkOyBib3VuZGFyeT0nICsgYm91bmRhcnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXNwb25zZS53cml0ZSgnLS0nICsgYm91bmRhcnkgKyAnXFxyXFxuJyk7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoaSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS53cml0ZSgnXFxyXFxuLS0nICsgYm91bmRhcnkgKyAnXFxyXFxuJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucGFydHNbaV0ud3JpdGUoY29udGV4dCwgcmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzcG9uc2Uud3JpdGUoJ1xcclxcbi0tJyArIGJvdW5kYXJ5ICsgJy0tXFxyXFxuJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=