"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DraftMockEntitySet = void 0;
var entitySet_1 = require("./entitySet");
var id_1 = require("./id");
function _getDateTimeOffset(isV4) {
    var date = new Date();
    date.setFullYear(2000 + Math.floor(Math.random() * 22));
    date.setDate(Math.floor(Math.random() * 30));
    date.setMonth(Math.floor(Math.random() * 12));
    date.setMilliseconds(0);
    return isV4 ? date.toISOString() : '/Date(' + date.getTime() + '+0000)/';
}
var DraftMockEntitySet = /** @class */ (function (_super) {
    __extends(DraftMockEntitySet, _super);
    function DraftMockEntitySet(rootFolder, entitySetDefinition, dataAccess, generateMockData) {
        return _super.call(this, rootFolder, entitySetDefinition, dataAccess, generateMockData, true, true) || this;
    }
    DraftMockEntitySet.prototype.checkSpecificProperties = function (filterExpression, mockData, allData, forceToLower) {
        if (forceToLower === void 0) { forceToLower = false; }
        if (filterExpression.prop === 'DraftAdministrativeData/InProcessByUser') {
            return false;
        }
        else if (filterExpression.prop === 'SiblingEntity/IsActiveEntity' && filterExpression.eqValue === 'null') {
            // Ensure that there is not sibling entity which is inactive
            var keys_1 = {};
            this.entityTypeDefinition.keys.forEach(function (keyDef) {
                if (keyDef.name !== 'IsActiveEntity') {
                    keys_1[keyDef.name] = mockData[keyDef.name];
                }
                else {
                    keys_1[keyDef.name] = false;
                }
            });
            return !allData.hasEntry(keys_1);
        }
        else {
            return true;
        }
    };
    DraftMockEntitySet.prototype.checkKeyValue = function (mockData, keyValues, keyName, property) {
        if (keyName === 'IsActiveEntity') {
            // Make sure we check a boolean value
            var booleanKeyValue = keyValues[keyName];
            if (typeof booleanKeyValue === 'string') {
                booleanKeyValue = booleanKeyValue === 'true';
            }
            return mockData[keyName] === booleanKeyValue;
        }
        return _super.prototype.checkKeyValue.call(this, mockData, keyValues, keyName, property);
    };
    DraftMockEntitySet.prototype.createInactiveVersion = function (keyValues, tenantId) {
        var currentMockData = this.getMockData(tenantId);
        var dataToDuplicate = this.performGET(keyValues, true, tenantId, true);
        dataToDuplicate.forEach(function (data) {
            data.HasDraftEntity = true;
            var duplicate = Object.assign({}, data);
            duplicate.IsActiveEntity = false;
            duplicate.HasActiveEntity = true;
            currentMockData.addEntry(duplicate);
        });
    };
    DraftMockEntitySet.prototype.activateInactiveVersion = function (keyValues, tenantId) {
        var _this = this;
        var currentMockData = this.getMockData(tenantId);
        var dataToDuplicate = this.performGET(keyValues, true, tenantId, true);
        dataToDuplicate.forEach(function (draftData) {
            var activateKeyValues = _this.getKeys(draftData);
            activateKeyValues.IsActiveEntity = true;
            var activeDraft = Object.assign({}, draftData);
            activeDraft.IsActiveEntity = true;
            activeDraft.HasDraftEntity = false;
            if (!currentMockData.hasEntry(activateKeyValues)) {
                currentMockData.addEntry(activeDraft);
            }
            else {
                currentMockData.updateEntry(activateKeyValues, activeDraft);
            }
        });
    };
    DraftMockEntitySet.prototype.draftDiscard = function (keyValues, draftData, tenantId) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var _loop_1, this_1, _c, _d, _i, navPropName, deleteKeyValues, activeData;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _super.prototype.performDELETE.call(this, keyValues, tenantId);
                        _loop_1 = function (navPropName) {
                            var navPropDetail, subKeys, navPropEntity;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!((_b = (_a = this_1.entitySetDefinition.navigationPropertyBinding[navPropName].annotations) === null || _a === void 0 ? void 0 : _a.Common) === null || _b === void 0 ? void 0 : _b.DraftNode)) return [3 /*break*/, 2];
                                        navPropDetail = this_1.entityTypeDefinition.navigationProperties.find(function (navProp) { return navProp.name === navPropName; });
                                        subKeys = this_1.dataAccess.getNavigationPropertyKeys(draftData, navPropDetail, this_1.entitySetDefinition.entityType, {});
                                        return [4 /*yield*/, this_1.dataAccess.getMockEntitySet(this_1.entitySetDefinition.navigationPropertyBinding[navPropName].name)];
                                    case 1:
                                        navPropEntity = (_a.sent());
                                        if (navPropEntity && navPropEntity.discardInactiveVersion) {
                                            navPropEntity.discardInactiveVersion(subKeys, tenantId);
                                        }
                                        _a.label = 2;
                                    case 2: return [2 /*return*/];
                                }
                            });
                        };
                        this_1 = this;
                        _c = [];
                        for (_d in this.entitySetDefinition.navigationPropertyBinding)
                            _c.push(_d);
                        _i = 0;
                        _e.label = 1;
                    case 1:
                        if (!(_i < _c.length)) return [3 /*break*/, 4];
                        navPropName = _c[_i];
                        return [5 /*yield**/, _loop_1(navPropName)];
                    case 2:
                        _e.sent();
                        _e.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        deleteKeyValues = Object.assign({}, keyValues);
                        deleteKeyValues.IsActiveEntity = true;
                        activeData = this.performGET(deleteKeyValues, false, tenantId, true);
                        if (activeData) {
                            activeData.HasDraftEntity = false;
                        }
                        return [2 /*return*/, activeData];
                }
            });
        });
    };
    DraftMockEntitySet.prototype.discardInactiveVersion = function (keyValues, tenantId) {
        var _this = this;
        var dataToDiscard = this.performGET(keyValues, true, tenantId);
        dataToDiscard.forEach(function (data) {
            var keys = _this.getKeys(data);
            _this.performDELETE(keys, tenantId);
            var deleteKeyValues = Object.assign({}, keys);
            deleteKeyValues.IsActiveEntity = true;
            var activeData = _this.performGET(deleteKeyValues, false, tenantId, true);
            if (activeData) {
                activeData.HasDraftEntity = false;
            }
        });
    };
    DraftMockEntitySet.prototype.executeAction = function (actionDefinition, actionData, odataRequest, keys) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function () {
            var currentMockData, responseObject, _e, data, duplicate, currentDate, _loop_2, this_2, _f, _g, _i, navPropName, inactiveKeys, data, activeData, draftData, keyValues, activeDraft, _loop_3, this_3, _h, _j, _k, navPropName;
            return __generator(this, function (_l) {
                switch (_l.label) {
                    case 0:
                        currentMockData = this.getMockData(odataRequest.tenantId);
                        actionData = currentMockData.onBeforeAction(actionDefinition, actionData, keys);
                        _e = actionDefinition.fullyQualifiedName;
                        switch (_e) {
                            case this.entitySetDefinition.annotations.Common.DraftRoot.EditAction + "(" + this.entitySetDefinition.entityTypeName + ")": return [3 /*break*/, 1];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.EditAction + "()": return [3 /*break*/, 1];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.PreparationAction + "(" + this.entitySetDefinition.entityTypeName + ")": return [3 /*break*/, 6];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.PreparationAction + "()": return [3 /*break*/, 6];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.DiscardAction + "(" + this.entitySetDefinition.entityTypeName + ")": return [3 /*break*/, 7];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.DiscardAction + "()": return [3 /*break*/, 7];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.ActivationAction + "(" + this.entitySetDefinition.entityTypeName + ")": return [3 /*break*/, 9];
                            case this.entitySetDefinition.annotations.Common.DraftRoot.ActivationAction + "()": return [3 /*break*/, 9];
                        }
                        return [3 /*break*/, 15];
                    case 1:
                        data = this.performGET(keys, false, odataRequest.tenantId, true);
                        data.HasDraftEntity = true;
                        duplicate = Object.assign({}, data);
                        duplicate.IsActiveEntity = false;
                        duplicate.HasActiveEntity = true;
                        currentDate = _getDateTimeOffset(this.isV4());
                        duplicate.DraftAdministrativeData = {
                            DraftUUID: id_1.uuidv4(),
                            CreationDateTime: currentDate,
                            CreatedByUser: 'nobody',
                            DraftIsCreatedByMe: true,
                            LastChangeDateTime: currentDate,
                            LastChangedByUser: 'nobody',
                            InProcessByUser: 'nobody',
                            DraftIsProcessedByMe: true
                        };
                        currentMockData.addEntry(duplicate);
                        _loop_2 = function (navPropName) {
                            var navPropDetail, subKeys, navPropEntity;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!((_b = (_a = this_2.entitySetDefinition.navigationPropertyBinding[navPropName].annotations) === null || _a === void 0 ? void 0 : _a.Common) === null || _b === void 0 ? void 0 : _b.DraftNode)) return [3 /*break*/, 2];
                                        navPropDetail = this_2.entityTypeDefinition.navigationProperties.find(function (navProp) { return navProp.name === navPropName; });
                                        subKeys = this_2.dataAccess.getNavigationPropertyKeys(data, navPropDetail, this_2.entitySetDefinition.entityType, {});
                                        return [4 /*yield*/, this_2.dataAccess.getMockEntitySet(this_2.entitySetDefinition.navigationPropertyBinding[navPropName].name)];
                                    case 1:
                                        navPropEntity = (_a.sent());
                                        if (navPropEntity && navPropEntity.createInactiveVersion) {
                                            navPropEntity.createInactiveVersion(subKeys, odataRequest.tenantId);
                                        }
                                        _a.label = 2;
                                    case 2: return [2 /*return*/];
                                }
                            });
                        };
                        this_2 = this;
                        _f = [];
                        for (_g in this.entitySetDefinition.navigationPropertyBinding)
                            _f.push(_g);
                        _i = 0;
                        _l.label = 2;
                    case 2:
                        if (!(_i < _f.length)) return [3 /*break*/, 5];
                        navPropName = _f[_i];
                        return [5 /*yield**/, _loop_2(navPropName)];
                    case 3:
                        _l.sent();
                        _l.label = 4;
                    case 4:
                        _i++;
                        return [3 /*break*/, 2];
                    case 5:
                        // responseObject = duplicate;
                        odataRequest.query.queryPath.pop();
                        inactiveKeys = Object.assign({}, keys, { IsActiveEntity: false });
                        odataRequest.query.queryPath[odataRequest.query.queryPath.length - 1].keys = inactiveKeys;
                        responseObject = this.dataAccess.getData(odataRequest);
                        return [3 /*break*/, 15];
                    case 6:
                        // Prepare
                        responseObject = this.performGET(keys, false, odataRequest.tenantId);
                        return [3 /*break*/, 15];
                    case 7:
                        data = this.performGET(keys, false, odataRequest.tenantId);
                        return [4 /*yield*/, this.draftDiscard(keys, data, odataRequest.tenantId)];
                    case 8:
                        activeData = _l.sent();
                        responseObject = activeData;
                        return [3 /*break*/, 15];
                    case 9:
                        draftData = this.performGET(keys, false, odataRequest.tenantId);
                        keyValues = Object.assign({}, keys);
                        keyValues.IsActiveEntity = true;
                        activeDraft = Object.assign({}, draftData);
                        activeDraft.IsActiveEntity = true;
                        activeDraft.DraftAdministrativeData = null;
                        activeDraft.HasDraftEntity = false;
                        if (currentMockData.hasEntry(keyValues)) {
                            currentMockData.updateEntry(keyValues, activeDraft);
                        }
                        else {
                            currentMockData.addEntry(activeDraft);
                        }
                        _loop_3 = function (navPropName) {
                            var navPropDetail, subKeys, navPropEntity;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!((_d = (_c = this_3.entitySetDefinition.navigationPropertyBinding[navPropName].annotations) === null || _c === void 0 ? void 0 : _c.Common) === null || _d === void 0 ? void 0 : _d.DraftNode)) return [3 /*break*/, 2];
                                        navPropDetail = this_3.entityTypeDefinition.navigationProperties.find(function (navProp) { return navProp.name === navPropName; });
                                        subKeys = this_3.dataAccess.getNavigationPropertyKeys(draftData, navPropDetail, this_3.entitySetDefinition.entityType, {});
                                        return [4 /*yield*/, this_3.dataAccess.getMockEntitySet(this_3.entitySetDefinition.navigationPropertyBinding[navPropName].name)];
                                    case 1:
                                        navPropEntity = (_a.sent());
                                        if (navPropEntity && navPropEntity.activateInactiveVersion) {
                                            navPropEntity.activateInactiveVersion(subKeys, odataRequest.tenantId);
                                        }
                                        _a.label = 2;
                                    case 2: return [2 /*return*/];
                                }
                            });
                        };
                        this_3 = this;
                        _h = [];
                        for (_j in this.entitySetDefinition.navigationPropertyBinding)
                            _h.push(_j);
                        _k = 0;
                        _l.label = 10;
                    case 10:
                        if (!(_k < _h.length)) return [3 /*break*/, 13];
                        navPropName = _h[_k];
                        return [5 /*yield**/, _loop_3(navPropName)];
                    case 11:
                        _l.sent();
                        _l.label = 12;
                    case 12:
                        _k++;
                        return [3 /*break*/, 10];
                    case 13: return [4 /*yield*/, this.draftDiscard(keys, draftData, odataRequest.tenantId)];
                    case 14:
                        _l.sent();
                        responseObject = activeDraft;
                        return [3 /*break*/, 15];
                    case 15:
                        responseObject = currentMockData.onAfterAction(actionDefinition, actionData, keys, responseObject);
                        return [2 /*return*/, responseObject];
                }
            });
        });
    };
    DraftMockEntitySet.prototype.performPOST = function (keyValues, postData, tenantId) {
        // Validate potentially missing keys
        if (!Object.hasOwnProperty.call(postData, 'IsActiveEntity')) {
            postData.IsActiveEntity = false;
        }
        if (!Object.hasOwnProperty.call(postData, 'HasActiveEntity')) {
            postData.HasActiveEntity = false;
        }
        return _super.prototype.performPOST.call(this, keyValues, postData, tenantId);
    };
    DraftMockEntitySet.prototype.performDELETE = function (keyValues, tenantId) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var draftData;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        draftData = this.performGET(keyValues, false, tenantId);
                        if (!(((_b = (_a = this.entitySetDefinition.annotations) === null || _a === void 0 ? void 0 : _a.Common) === null || _b === void 0 ? void 0 : _b.DraftRoot) && draftData && !draftData.IsActiveEntity)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.draftDiscard(keyValues, draftData, tenantId)];
                    case 1:
                        _c.sent();
                        return [3 /*break*/, 3];
                    case 2: return [2 /*return*/, _super.prototype.performDELETE.call(this, keyValues, tenantId)];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return DraftMockEntitySet;
}(entitySet_1.MockDataEntitySet));
exports.DraftMockEntitySet = DraftMockEntitySet;
//# sourceMappingURL=data:application/json;base64,