import { ODataRequest } from '../request/odataRequest';
import { ODataMetadata } from './metadata';
import { MockDataEntitySet } from './entitySet';
import { StickyMockEntitySet } from './stickyEntitySet';
import { EntitySet, EntityType } from '@sap-ux/annotation-converter';
import { DataAccessInterface } from './common';
export declare class DataAccess implements DataAccessInterface {
    protected readonly mockDataRootFolder: string;
    protected readonly metadata: ODataMetadata;
    protected readonly strictKeyMode: boolean;
    protected readonly contextBasedIsolation: boolean;
    protected entitySets: Record<string, MockDataEntitySet>;
    protected stickyEntitySets: StickyMockEntitySet[];
    constructor(root: string, metadata: ODataMetadata, strictKeyMode: boolean, contextBasedIsolation: boolean, generateMockData: boolean);
    isV4(): boolean;
    getMockEntitySet(entityTypeName: any, generateMockData?: boolean, containedEntityType?: EntityType, containedData?: any): Promise<MockDataEntitySet>;
    performAction(odataRequest: ODataRequest, actionData: object): Promise<any>;
    getNavigationPropertyKeys(data: any, navPropDetail: any, currentEntityType: EntityType, currentKeys: Record<string, string>, forCreate?: boolean): Record<string, string>;
    getExpandData(currentEntitySet: EntitySet, entityType: EntityType, expandNavProp: string, data: object, requestExpandObject: any, tenantId: string, previousEntitySet: EntitySet, visitedPaths: string[]): Promise<void>;
    getData(odataRequest: ODataRequest): Promise<any>;
    updateData(odataRequest: ODataRequest, patchData: any): Promise<any>;
    createData(odataRequest: ODataRequest, postData: any): Promise<any>;
    deleteData(odataRequest: ODataRequest): Promise<void>;
    resetStickySessionTimeout(res: any, tenantId: string): void;
}
