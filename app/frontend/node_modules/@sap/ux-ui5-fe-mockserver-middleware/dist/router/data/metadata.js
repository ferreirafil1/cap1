"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODataMetadata = void 0;
var edmx_parser_1 = require("@sap-ux/edmx-parser");
var annotation_converter_1 = require("@sap-ux/annotation-converter");
var ODataMetadata = /** @class */ (function () {
    function ODataMetadata(metadata, parserMetadata) {
        this.typeToEntityMapping = {};
        this.metadata = metadata;
        this.parserMetadata = parserMetadata;
    }
    ODataMetadata.parse = function (edmx) {
        return __awaiter(this, void 0, void 0, function () {
            var metadata, converterMetadata;
            return __generator(this, function (_a) {
                metadata = edmx_parser_1.parseEDMX(edmx);
                converterMetadata = annotation_converter_1.convertTypes(metadata);
                return [2 /*return*/, new ODataMetadata(converterMetadata, metadata)];
            });
        });
    };
    ODataMetadata.prototype.getVersion = function () {
        return this.metadata.version === '1.0' ? '2.0' : '4.0';
    };
    ODataMetadata.prototype.getEntitySet = function (entitySetName) {
        return this.metadata.entitySets.find(function (entitySet) { return entitySet.name === entitySetName; });
    };
    ODataMetadata.prototype.getEntitySets = function () {
        return this.metadata.entitySets;
    };
    ODataMetadata.prototype.getEntityType = function (entityTypeName) {
        return this.metadata.entityTypes.find(function (entityType) { return entityType.name === entityTypeName; });
    };
    ODataMetadata.prototype.getEntityTypeByFQDN = function (entityTypeName) {
        return this.metadata.entityTypes.find(function (entityType) { return entityType.fullyQualifiedName === entityTypeName; });
    };
    ODataMetadata.prototype.getEntitySetByType = function (entityTypeName) {
        return this.metadata.entitySets.find(function (entitySet) { return entitySet.entityTypeName === entityTypeName; });
    };
    ODataMetadata.prototype.getNamespace = function () {
        return this.metadata.namespace;
    };
    ODataMetadata.prototype.getActionByFQN = function (actionFQN) {
        return this.metadata.actions.find(function (action) { return action.fullyQualifiedName === actionFQN; });
    };
    ODataMetadata.prototype.getEntityContainerPath = function () {
        return this.parserMetadata.schema.entityContainer.fullyQualifiedName;
    };
    ODataMetadata.prototype.isDraftEntity = function (entitySet) {
        var _a, _b, _c, _d;
        return (((_b = (_a = entitySet === null || entitySet === void 0 ? void 0 : entitySet.annotations) === null || _a === void 0 ? void 0 : _a.Common) === null || _b === void 0 ? void 0 : _b.DraftRoot) !== undefined ||
            ((_d = (_c = entitySet === null || entitySet === void 0 ? void 0 : entitySet.annotations) === null || _c === void 0 ? void 0 : _c.Common) === null || _d === void 0 ? void 0 : _d.DraftNode) !== undefined);
    };
    ODataMetadata.prototype.isStickyEntity = function (entitySet) {
        var _a, _b;
        return ((_b = (_a = entitySet === null || entitySet === void 0 ? void 0 : entitySet.annotations) === null || _a === void 0 ? void 0 : _a.Session) === null || _b === void 0 ? void 0 : _b.StickySessionSupported) !== undefined;
    };
    return ODataMetadata;
}());
exports.ODataMetadata = ODataMetadata;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVyL2RhdGEvbWV0YWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsbURBQWdEO0FBQ2hELHFFQUE0RztBQUc1RztJQVdJLHVCQUFvQixRQUF5QixFQUFFLGNBQTRCO1FBSjNELHdCQUFtQixHQUFXLEVBQUUsQ0FBQztRQUs3QyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztJQUN6QyxDQUFDO0lBYm1CLG1CQUFLLEdBQXpCLFVBQTBCLElBQVk7Ozs7Z0JBQzVCLFFBQVEsR0FBaUIsdUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDekMsaUJBQWlCLEdBQW9CLG1DQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2xFLHNCQUFPLElBQUksYUFBYSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQyxFQUFDOzs7S0FDekQ7SUFXTSxrQ0FBVSxHQUFqQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUMzRCxDQUFDO0lBRU0sb0NBQVksR0FBbkIsVUFBb0IsYUFBcUI7UUFDckMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBQyxTQUFTLElBQUssT0FBQSxTQUFTLENBQUMsSUFBSSxLQUFLLGFBQWEsRUFBaEMsQ0FBZ0MsQ0FBQyxDQUFDO0lBQzFGLENBQUM7SUFFTSxxQ0FBYSxHQUFwQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUM7SUFDcEMsQ0FBQztJQUVNLHFDQUFhLEdBQXBCLFVBQXFCLGNBQXNCO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQUMsVUFBVSxJQUFLLE9BQUEsVUFBVSxDQUFDLElBQUksS0FBSyxjQUFjLEVBQWxDLENBQWtDLENBQUMsQ0FBQztJQUM5RixDQUFDO0lBRU0sMkNBQW1CLEdBQTFCLFVBQTJCLGNBQXNCO1FBQzdDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQUMsVUFBVSxJQUFLLE9BQUEsVUFBVSxDQUFDLGtCQUFrQixLQUFLLGNBQWMsRUFBaEQsQ0FBZ0QsQ0FBQyxDQUFDO0lBQzVHLENBQUM7SUFDTSwwQ0FBa0IsR0FBekIsVUFBMEIsY0FBc0I7UUFDNUMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBQyxTQUFTLElBQUssT0FBQSxTQUFTLENBQUMsY0FBYyxLQUFLLGNBQWMsRUFBM0MsQ0FBMkMsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7SUFFTSxvQ0FBWSxHQUFuQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7SUFDbkMsQ0FBQztJQUVNLHNDQUFjLEdBQXJCLFVBQXNCLFNBQWlCO1FBQ25DLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQUMsTUFBTSxJQUFLLE9BQUEsTUFBTSxDQUFDLGtCQUFrQixLQUFLLFNBQVMsRUFBdkMsQ0FBdUMsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFTSw4Q0FBc0IsR0FBN0I7UUFDSSxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsQ0FBQztJQUN6RSxDQUFDO0lBQ00scUNBQWEsR0FBcEIsVUFBcUIsU0FBb0I7O1FBQ3JDLE9BQU8sQ0FDSCxhQUFBLFNBQVMsYUFBVCxTQUFTLHVCQUFULFNBQVMsQ0FBRSxXQUFXLDBDQUFFLE1BQU0sMENBQUUsU0FBUyxNQUFLLFNBQVM7WUFDdkQsYUFBQSxTQUFTLGFBQVQsU0FBUyx1QkFBVCxTQUFTLENBQUUsV0FBVywwQ0FBRSxNQUFNLDBDQUFFLFNBQVMsTUFBSyxTQUFTLENBQzFELENBQUM7SUFDTixDQUFDO0lBRU0sc0NBQWMsR0FBckIsVUFBc0IsU0FBb0I7O1FBQ3RDLE9BQU8sYUFBQSxTQUFTLGFBQVQsU0FBUyx1QkFBVCxTQUFTLENBQUUsV0FBVywwQ0FBRSxPQUFPLDBDQUFFLHNCQUFzQixNQUFLLFNBQVMsQ0FBQztJQUNqRixDQUFDO0lBaUNMLG9CQUFDO0FBQUQsQ0FBQyxBQTVGRCxJQTRGQztBQTVGWSxzQ0FBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRURNWCB9IGZyb20gJ0BzYXAtdXgvZWRteC1wYXJzZXInO1xuaW1wb3J0IHsgQWN0aW9uLCBDb252ZXJ0ZXJPdXRwdXQsIGNvbnZlcnRUeXBlcywgRW50aXR5U2V0LCBFbnRpdHlUeXBlIH0gZnJvbSAnQHNhcC11eC9hbm5vdGF0aW9uLWNvbnZlcnRlcic7XG5pbXBvcnQgeyBQYXJzZXJPdXRwdXQgfSBmcm9tICdAc2FwLXV4L3ZvY2FidWxhcmllcy10eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBPRGF0YU1ldGFkYXRhIHtcbiAgICBwdWJsaWMgc3RhdGljIGFzeW5jIHBhcnNlKGVkbXg6IHN0cmluZyk6IFByb21pc2U8T0RhdGFNZXRhZGF0YT4ge1xuICAgICAgICBjb25zdCBtZXRhZGF0YTogUGFyc2VyT3V0cHV0ID0gcGFyc2VFRE1YKGVkbXgpO1xuICAgICAgICBjb25zdCBjb252ZXJ0ZXJNZXRhZGF0YTogQ29udmVydGVyT3V0cHV0ID0gY29udmVydFR5cGVzKG1ldGFkYXRhKTtcbiAgICAgICAgcmV0dXJuIG5ldyBPRGF0YU1ldGFkYXRhKGNvbnZlcnRlck1ldGFkYXRhLCBtZXRhZGF0YSk7XG4gICAgfVxuXG4gICAgcHVibGljIHJlYWRvbmx5IHR5cGVUb0VudGl0eU1hcHBpbmc6IG9iamVjdCA9IHt9O1xuICAgIHByb3RlY3RlZCByZWFkb25seSBtZXRhZGF0YTogQ29udmVydGVyT3V0cHV0O1xuICAgIHByb3RlY3RlZCByZWFkb25seSBwYXJzZXJNZXRhZGF0YTogUGFyc2VyT3V0cHV0O1xuXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcihtZXRhZGF0YTogQ29udmVydGVyT3V0cHV0LCBwYXJzZXJNZXRhZGF0YTogUGFyc2VyT3V0cHV0KSB7XG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSBtZXRhZGF0YTtcbiAgICAgICAgdGhpcy5wYXJzZXJNZXRhZGF0YSA9IHBhcnNlck1ldGFkYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRWZXJzaW9uKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLm1ldGFkYXRhLnZlcnNpb24gPT09ICcxLjAnID8gJzIuMCcgOiAnNC4wJztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0RW50aXR5U2V0KGVudGl0eVNldE5hbWU6IHN0cmluZyk6IEVudGl0eVNldCB7XG4gICAgICAgIHJldHVybiB0aGlzLm1ldGFkYXRhLmVudGl0eVNldHMuZmluZCgoZW50aXR5U2V0KSA9PiBlbnRpdHlTZXQubmFtZSA9PT0gZW50aXR5U2V0TmFtZSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEVudGl0eVNldHMoKTogRW50aXR5U2V0W10ge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRhZGF0YS5lbnRpdHlTZXRzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRFbnRpdHlUeXBlKGVudGl0eVR5cGVOYW1lOiBzdHJpbmcpOiBFbnRpdHlUeXBlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YWRhdGEuZW50aXR5VHlwZXMuZmluZCgoZW50aXR5VHlwZSkgPT4gZW50aXR5VHlwZS5uYW1lID09PSBlbnRpdHlUeXBlTmFtZSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEVudGl0eVR5cGVCeUZRRE4oZW50aXR5VHlwZU5hbWU6IHN0cmluZyk6IEVudGl0eVR5cGUge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRhZGF0YS5lbnRpdHlUeXBlcy5maW5kKChlbnRpdHlUeXBlKSA9PiBlbnRpdHlUeXBlLmZ1bGx5UXVhbGlmaWVkTmFtZSA9PT0gZW50aXR5VHlwZU5hbWUpO1xuICAgIH1cbiAgICBwdWJsaWMgZ2V0RW50aXR5U2V0QnlUeXBlKGVudGl0eVR5cGVOYW1lOiBzdHJpbmcpOiBFbnRpdHlTZXQge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRhZGF0YS5lbnRpdHlTZXRzLmZpbmQoKGVudGl0eVNldCkgPT4gZW50aXR5U2V0LmVudGl0eVR5cGVOYW1lID09PSBlbnRpdHlUeXBlTmFtZSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE5hbWVzcGFjZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRhZGF0YS5uYW1lc3BhY2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFjdGlvbkJ5RlFOKGFjdGlvbkZRTjogc3RyaW5nKTogQWN0aW9uIHwgdW5kZWZpbmVkIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YWRhdGEuYWN0aW9ucy5maW5kKChhY3Rpb24pID0+IGFjdGlvbi5mdWxseVF1YWxpZmllZE5hbWUgPT09IGFjdGlvbkZRTik7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEVudGl0eUNvbnRhaW5lclBhdGgoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VyTWV0YWRhdGEuc2NoZW1hLmVudGl0eUNvbnRhaW5lci5mdWxseVF1YWxpZmllZE5hbWU7XG4gICAgfVxuICAgIHB1YmxpYyBpc0RyYWZ0RW50aXR5KGVudGl0eVNldDogRW50aXR5U2V0KTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBlbnRpdHlTZXQ/LmFubm90YXRpb25zPy5Db21tb24/LkRyYWZ0Um9vdCAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICBlbnRpdHlTZXQ/LmFubm90YXRpb25zPy5Db21tb24/LkRyYWZ0Tm9kZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGlzU3RpY2t5RW50aXR5KGVudGl0eVNldDogRW50aXR5U2V0KTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBlbnRpdHlTZXQ/LmFubm90YXRpb25zPy5TZXNzaW9uPy5TdGlja3lTZXNzaW9uU3VwcG9ydGVkICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vXG4gICAgLy8gcHVibGljIGdldEtleXMoZW50aXR5U2V0OiBzdHJpbmcpOiBzdHJpbmdbXSB7XG4gICAgLy8gICAgIHJldHVybiB0aGlzLmVudGl0aWVzW2VudGl0eVNldF0ua2V5cztcbiAgICAvLyB9XG4gICAgLy9cbiAgICAvLyBwdWJsaWMgZ2V0VGFyZ2V0KGVudGl0eVNldDogc3RyaW5nLCBuYXZQcm9wZXJ0eTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAvLyAgICAgY29uc3QgcHJvcHMgPSBuYXZQcm9wZXJ0eS5zcGxpdCgnLycpO1xuICAgIC8vICAgICBsZXQgdGFyZ2V0ID0gZW50aXR5U2V0O1xuICAgIC8vICAgICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcHMpIHtcbiAgICAvLyAgICAgICAgIGlmICghdGhpcy5lbnRpdGllc1t0YXJnZXRdKSB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5lcnJvcihgQ291bGQgbm90IGZpbmQgZW50aXR5U2V0ICR7ZW50aXR5U2V0fWApO1xuICAgIC8vICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgICAgICBjb25zdCBuYXYgPSB0aGlzLmVudGl0aWVzW3RhcmdldF0ubmF2aWdhdGlvbltwcm9wXTtcbiAgICAvLyAgICAgICAgIGlmICghbmF2KSB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5lcnJvcihgQ291bGQgbm90IGZpbmQgbmF2aWdhdGlvbiBmb3IgJHtlbnRpdHlTZXR9LiR7cHJvcH1gKTtcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIC8vICAgICAgICAgfSBlbHNlIHtcbiAgICAvLyAgICAgICAgICAgICB0YXJnZXQgPSB0aGlzLnR5cGVUb0VudGl0eU1hcHBpbmdbbmF2Wyd0byddXSB8fCBuYXZbJ3RvJ107XG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAvLyAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAvLyB9XG4gICAgLy9cbiAgICAvLyBwdWJsaWMgZ2V0VGFyZ2V0UHJvcGVydHlNYXAoZW50aXR5U2V0OiBzdHJpbmcsIG5hdlByb3BlcnR5OiBzdHJpbmcpOiBvYmplY3Qge1xuICAgIC8vICAgICBpZiAobmF2UHJvcGVydHkuaW5jbHVkZXMoJy8nKSkge1xuICAgIC8vICAgICAgICAgY29uc3QgcHJvcHMgPSBuYXZQcm9wZXJ0eS5zcGxpdCgnLycpO1xuICAgIC8vICAgICAgICAgbmF2UHJvcGVydHkgPSBwcm9wcy5wb3AoKTtcbiAgICAvLyAgICAgICAgIGVudGl0eVNldCA9IHRoaXMuZ2V0VGFyZ2V0KGVudGl0eVNldCwgcHJvcHMuam9pbignLycpKTtcbiAgICAvLyAgICAgfVxuICAgIC8vICAgICByZXR1cm4gdGhpcy5lbnRpdGllc1tlbnRpdHlTZXRdLm5hdmlnYXRpb25bbmF2UHJvcGVydHldWydrZXlzJ107XG4gICAgLy8gfVxufVxuIl19