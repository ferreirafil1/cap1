import { Manifest, PageTypeV4 } from '../../../../specification/common';
import { ListReportConfig, SapUiAppPageV4, AnalyticalListPageConfig } from '../../../../specification/v4';
import { ExtensionLogger } from '../../../../apiTypes';
import { MetadataInstanceInterface } from '../../../common/decoration/factory';
/**
 * Adds manifest settings to the config.json of LR or ALP V4
 * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled
 * @param {Manifest} manifest - manifest.json of the app
 * @param {object} jsonSchema - the app-specific schema
 * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata
 * @param {SapUiAppPageV4} page - page in manifest
 * @param {PageTypeV4} pageType - page type
 * @param {ExtensionLogger} logger - instance for logging exceptions
 */
export declare function addSettings(config: ListReportConfig | AnalyticalListPageConfig, manifest: Manifest, jsonSchema: object, factory: MetadataInstanceInterface, page: SapUiAppPageV4, pageType: PageTypeV4, logger?: ExtensionLogger): ListReportConfig | AnalyticalListPageConfig;
/**
 * Creates the configuration file content for a list report V4
 * @param {object} manifest - manifest.json of the given application
 * @param jsonSchema - the application specific JSON schema
 * @param {ExtensionLogger} logger - Logger class for logging messages
 *
 * @returns {ListReportConfig} - the configuration (JSON) for the list report
 */
export declare function createListReportConfig(manifest: object, jsonSchema: object, logger?: ExtensionLogger): ListReportConfig;
